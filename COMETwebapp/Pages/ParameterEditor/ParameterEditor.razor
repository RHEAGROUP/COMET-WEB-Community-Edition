<!------------------------------------------------------------------------------
Copyright (c) 2023 RHEA System S.A.

    Authors: Justine Veirier d'aiguebonne, Sam Gerené, Alex Vorobiev, Alexander van Delft

    This file is part of COMET WEB Community Edition
     The COMET WEB Community Edition is the RHEA Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.

    The COMET WEB Community Edition is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.

    The COMET WEB Community Edition is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->

@page "/ParameterEditor"

@using CDP4Common.EngineeringModelData
@using CDP4Common.SiteDirectoryData

<ApplicationTemplate Title="Parameter Editor">
<Body>
        <div class="container-fluid">
            <div class="row ">
@*                <div class="col">
                    <h6>Filter on Element Usage Name:</h6>
                    <div class="width-fit-content">
                        <DxComboBox Data="@Filter(Elements.OrderBy(e => e.Name).ToList())"
                            TextFieldName="@nameof(ElementBase.Name)"
                            AllowUserInput="true"
                            NullText="--Select an Element--"
                            Value="this.selectedElement"
                            ValueChanged="@((ElementBase element) => this.selectedElement = element)"
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                            FilteringMode="DataGridFilteringMode.Contains"/>
                    </div>
                </div>*@
                <div class="col">
                    <h6>Filter on Parameter Type:</h6>
                    <div class="width-fit-content">
                        <DxComboBox Data="@this.ViewModel.ParameterTypes"
                            AllowUserInput="true"
                            NullText="--Select--"
                            Value="this.ViewModel.SelectedParameterType"
                            ValueChanged="@((ParameterType parameterType) => this.ViewModel.SelectedParameterType = parameterType)"
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                            FilteringMode="DataGridFilteringMode.Contains"/>
                    </div>
                </div>  
                @{
                    var iteration = this.ViewModel.SessionService.DefaultIteration;

                    if (iteration != null && iteration.Option.ToList().Count > 1)
                    {
                        var options = iteration.Option.OrderBy(o => o.Name).ToList();
                        <div class="col">
                            <h6>Filter on Option:</h6>
                            <div class="width-fit-content">
                                <DxComboBox Data="@options"
                                            AllowUserInput="true"
                                            Value="this.ViewModel.SelectedOption"
                                            ValueChanged="@((Option option) => this.ViewModel.SelectedOption = option)"
                                            FilteringMode="DataGridFilteringMode.Contains"/>
                            </div>
                        </div>
                    }
                    if (iteration != null && iteration.ActualFiniteStateList.Any())
                    {
                        var states = iteration.ActualFiniteStateList.SelectMany(x => x.ActualState);

                        <div class="col">
                            <h6>Filter on State:</h6>
                            <DxComboBox Data="@states"
                                        AllowUserInput="true"
                                        NullText="--Select--"
                                        Value="this.ViewModel.SelectedState"
                                        ValueChanged="@((ActualFiniteState actualState) => this.ViewModel.SelectedState = actualState)"
                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                        FilteringMode="DataGridFilteringMode.Contains"/>
                        </div>
                    }
                }
            </div>
@*            <div class="row m-4">
                <div class="col">
                    <div class="@BS.Form_Check @BS.Form_Switch">
                        <BSInputCheckbox CheckedValue="@(true)" @bind-Value="this.IsOwnedParameters" @onchange="@OnOwnerFilterChange"/>
                        <BSLabel IsCheckLabel="true">Only Parameters owned by @this.SessionService.GetDomainOfExpertise(this.SessionService.DefaultIteration)?.Name domain</BSLabel>
                    </div>
                </div>
            </div>*@
            <div class="row">
                <ParameterTable Elements="@this.ViewModel.FilteredElements" 
                    IsOwnedParameters="@this.ViewModel.IsOwnedParameters"
                    ParameterTypeSelected="@this.ViewModel.SelectedParameterType" 
                    OptionSelected="@this.ViewModel.SelectedOption"
                    StateSelected="@this.ViewModel.SelectedState" />
            </div>
        </div>
    </Body>
</ApplicationTemplate>

