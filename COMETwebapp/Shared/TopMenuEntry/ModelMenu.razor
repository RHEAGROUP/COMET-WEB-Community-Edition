<!------------------------------------------------------------------------------
// Copyright (c) 2023 RHEA System S.A.
//
//    Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine
//
//    This file is part of COMET WEB Community Edition
//    The COMET WEB Community Edition is the RHEA Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.
//
//    The COMET WEB Community Edition is free software; you can redistribute it and/or
//    modify it under the terms of the GNU Affero General Public
//    License as published by the Free Software Foundation; either
//    version 3 of the License, or (at your option) any later version.
//
//    The COMET WEB Community Edition is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//    Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->
@using ReactiveUI
@inherits AuthorizedMenuEntry
<ConfirmCancelPopup ViewModel="@(this.ViewModel.ConfirmCancelViewModel)" />

<DxPopup @bind-Visible="@this.ViewModel.IsOnSwitchDomainMode" CloseOnOutsideClick="false" HeaderText="Switch domain" ShowCloseButton="true">
	<SwitchDomain ViewModel="@this.ViewModel.SwitchDomainViewModel"/>
</DxPopup>

<DxPopup @bind-Visible="@this.ViewModel.IsOnOpenIterationMode" CloseOnOutsideClick="false" HeaderText="Open a new Model" ShowCloseButton="true">
	<OpenModel />
</DxPopup>

<DxMenuItem Name="model-entry" Text="Models" IconCssClass="icon icon-folder" Enabled="@(this.AuthorizedMenuEntryViewModel.IsAuthenticated)">
    <TextTemplate>
        <span id="@context.Name">
            @context.Text
        </span>
    </TextTemplate>
    <Items>
        <DxMenuItem Name="model-entry-open" Text="Open Model" Click="@this.ViewModel.AskToOpenIteration">
            <TextTemplate Context="contextSwitch">
                <span id="@contextSwitch.Name">
                    @contextSwitch.Text
                </span>
            </TextTemplate>
        </DxMenuItem>
        @{
            var rowIndex = 0;

            foreach (var iteration in this.ViewModel.SessionService.OpenIterations.Items)
            {
                <ModelMenuRow ViewModel="@(this.ViewModel.CreateRowViewModel(iteration))" IsDefault="@(this.ViewModel.SessionService.DefaultIteration.Iid == iteration.Iid)"
                              RowIndex="@rowIndex"/>
                rowIndex++;
            }
        }
    </Items>
</DxMenuItem>