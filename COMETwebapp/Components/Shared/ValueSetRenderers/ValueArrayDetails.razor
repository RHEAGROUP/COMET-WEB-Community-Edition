<!------------------------------------------------------------------------------
// Copyright (c) 2023 RHEA System S.A.
//
//    Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine, Nabil Abbar
//
//    This file is part of COMET WEB Community Edition
//    The COMET WEB Community Edition is the RHEA Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.
//
//    The COMET WEB Community Edition is free software; you can redistribute it and/or
//    modify it under the terms of the GNU Affero General Public
//    License as published by the Free Software Foundation; either
//    version 3 of the License, or (at your option) any later version.
//
//    The COMET WEB Community Edition is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//    Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->
@using CDP4Common.SiteDirectoryData

@if (this.ParameterType.NumberOfValues == 1)
{
    <ScalarParameter
        Value="@(this.Value.First())"
        Scale="@(this.Scale)"/>
}
else if (this.ParameterType is ArrayParameterType arrayParameterType)
{
    <ArrayParameter
        ArrayParameterType="arrayParameterType"
        Values="@(this.Value)"/>
}
else
{
    var compoundParameterType = (CompoundParameterType)this.ParameterType;
    <div class="p-0 compound">
        @foreach (var component in compoundParameterType.Component.ToList())
        {
            var indexStart = 0;
            for (var componentIndex = 0; componentIndex < compoundParameterType.Component.IndexOf(component); componentIndex++)
            {
                indexStart += compoundParameterType.Component.ElementAt(componentIndex).ParameterType.NumberOfValues;
            }

            <CompoundParameter
                IndexStartInParameterTypeComponent="indexStart"
                Values="@(this.Value)"
                Component="component"/>
        }
    </div>
}