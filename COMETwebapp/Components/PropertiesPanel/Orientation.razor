@{
    <BSNav IsTabs="true">
        <BSNavItem>
            <TabLabel>Euler</TabLabel>
            <TabContent>

                @{
                    var types = new List<string>() { "Degrees", "Radians" };
                    <DxComboBox Data="types"
                        NullText="-"
                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Never"
                        Value="this.AngleFormat"
                        ValueChanged="@((string value)=>this.OnAngleFormatChanged(new ChangeEventArgs(){Value = value}))"
                        CssClass="angle-format-combo"/>

                    <div class="parameter-row">
                        <p>Rx:</p>
                        <BSInput InputType="InputType.Text" Value="this.Rx" Class="parameter-input" @oninput="@((e) => this.OnEulerAnglesChanged(new CustomChangeEventArgs("Rx",e)))"/>
                    </div>
                    <div class="parameter-row">
                        <p>Ry:</p>
                        <BSInput InputType="InputType.Text" Value="this.Ry" Class="parameter-input" @oninput="@((e) => this.OnEulerAnglesChanged(new CustomChangeEventArgs("Ry",e)))"/>
                    </div>
                    <div class="parameter-row">
                        <p>Rz:</p>
                        <BSInput InputType="InputType.Text" Value="this.Rz" Class="parameter-input" @oninput="@((e) => this.OnEulerAnglesChanged(new CustomChangeEventArgs("Rz",e)))"/>
                    </div>
                }
            </TabContent>

        </BSNavItem>
        <BSNavItem>
            <TabLabel>Matrix</TabLabel>
            <TabContent>
                @{
                    if(this.OrientationParameterType is not null)
                    {
                        for (int i = 0; i < this.OrientationParameterType.Component.Count; i++)
                        {
                            var index = i;
                            var comp = this.OrientationParameterType.Component[i];

                            <div class="parameter-row">
                                <p>@comp.ShortName</p>
                                <BSInput InputType="InputType.Text" Value="this.ValueSet.ActualValue[i]" Class="parameter-input" @oninput="(e)=>this.OnMatrixChanged(index,e)"/>
                            </div>
                        }
                    }
                }
            </TabContent>
        </BSNavItem>
    </BSNav>
}
